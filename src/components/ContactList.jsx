import React from "react";
import { useState } from "react";
import ContactRow from "./ContactRow";
import { useEffect } from "react";
import App from "../App";

const dummyContacts = [
    { id: 1, name: "R2-D2", phone: "222-222-2222", email: "r2d2@droids.com" },
    { id: 2, name: "C-3PO", phone: "333-333-3333", email: "c3po@droids.com" },
    { id: 3, name: "BB-8", phone: "888-888-8888", email: "bb8@droids.com" },
  ];


export default function ContactList( { setSelectedContactId }) {

    const [contacts, setContacts] = useState(dummyContacts);

    useEffect(() =>{
        async function fetchContacts () {
            try {
                const response = await fetch("https://fsa-jsonplaceholder-69b5c48f1259.herokuapp.com/users");

                const result = await response.json();
                setContacts(result);

            } catch (error) {
                console.error(error);
            }
        }
        fetchContacts();
    }, [])

      console.log("Contacts: ", contacts);

    return (
        <table>
          <thead>
            <tr>
              <th colSpan="3"><svg className="contact-icon"xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"><path fill="currentColor" d="M8.878 19.1c-2.861-.25-5.385-1.312-7.03-2.954c-.936-.936-1.504-1.952-1.76-3.149c-.118-.544-.117-1.448 0-1.997c.357-1.664 1.433-3.12 3.126-4.23c3.862-2.533 9.778-2.52 13.604.03c.508.338.836.607 1.296 1.06c.58.573.988 1.142 1.418 1.98c.016.03.095.07.176.086c.27.056.633.268.924.54c.226.21.401.44.832 1.093c.435.658 2.404 3.697 2.524 3.896c.046.078-.046.202-.15.202c-.073 0-.126-.05-.234-.22l-1.116-1.732c-1.9-2.942-2.003-3.078-2.532-3.343l-.278-.14h-.817c-.816 0-.817.001-.837.087c-.108.47-.128.586-.104.608c.015.014.478.278 1.03.586l1.002.562l-.062.131c-.035.072-.074.132-.088.132s-.858-.468-1.875-1.039c-1.018-.57-1.91-1.054-1.982-1.074c-.29-.08-.734.24-.734.529c0 .292.087.378 1.874 1.841c1.115.914 1.753 1.462 1.85 1.592c.178.236.357.584.523 1.012c.29.754.763 1.174 1.538 1.368l.255.064l-.021.14a.7.7 0 0 1-.037.157c-.033.037-.547-.127-.844-.27c-.465-.223-.785-.541-1.099-1.094a6 6 0 0 0-.405.139c-.391.142-.41.154-.78.515c-1.576 1.538-3.836 2.521-6.566 2.855c-.443.055-2.15.079-2.621.037m2.717-.473c1.252-.166 2.223-.414 3.24-.83c1.067-.437 2.073-1.065 2.777-1.733l.277-.264l-.698-.333c-.746-.357-.82-.416-.915-.735c-.06-.2.008-.415.198-.621l.149-.161l-.324-.246c-.256-.195-.336-.28-.386-.41a.65.65 0 0 1 .079-.616l.098-.138l-1.023-.18a26 26 0 0 1-1.166-.222a.58.58 0 0 1-.35-.391c-.022-.092.48-2.54.592-2.89a.67.67 0 0 1 .426-.376c.169-.031 3.185.499 3.335.587c.238.138.313.362.238.705l-.032.144h.167c.092 0 .31-.012.483-.025l.316-.025l-.157-.29c-.474-.882-1.33-1.768-2.388-2.472c-.494-.328-1.547-.847-2.181-1.074a13.5 13.5 0 0 0-3.043-.674c-.575-.06-2.082-.06-2.64.001c-1.339.146-2.554.449-3.617.902C2.59 7.309.935 9.046.512 11.027c-.11.517-.12 1.423-.018 1.894c.224 1.04.713 1.941 1.509 2.78c1.62 1.707 4.097 2.756 7.066 2.994c.397.031 2.121-.015 2.526-.068m-.543-1.864c-.153-.044-.308-.227-.34-.4c-.022-.114.004-.192.166-.506c.656-1.27.941-2.437.941-3.855c0-1.37-.252-2.435-.879-3.713c-.135-.274-.245-.529-.245-.565c0-.136.114-.333.237-.41c.169-.107.452-.087.588.04c.052.05.187.271.3.494c.449.88.756 1.847.908 2.853c.094.623.113 1.803.038 2.373a9.3 9.3 0 0 1-.86 2.909c-.27.555-.438.784-.58.784a.4.4 0 0 0-.101.015a.4.4 0 0 1-.173-.019m-1.826-.955c-.234-.069-.404-.357-.336-.573c.017-.052.127-.293.246-.535a6 6 0 0 0 .609-3.201c-.084-.886-.243-1.445-.643-2.263c-.269-.549-.281-.634-.125-.854c.148-.21.519-.245.713-.066c.135.124.555 1 .716 1.496a7.1 7.1 0 0 1-.232 5.016c-.352.826-.599 1.081-.948.98m-1.882-.969a.57.57 0 0 1-.304-.374c-.021-.094.014-.198.187-.547c.632-1.28.639-2.514.02-3.765c-.271-.55-.277-.659-.047-.876c.113-.107.161-.126.32-.126c.267 0 .406.135.644.625c.367.754.518 1.408.516 2.246c0 .86-.141 1.452-.533 2.247c-.225.455-.336.575-.56.606a.5.5 0 0 1-.243-.036m-1.757-.902a.6.6 0 0 1-.286-.34c-.043-.152-.008-.273.165-.557c.222-.365.274-.56.274-1.038c0-.477-.052-.673-.274-1.038a2 2 0 0 1-.168-.329c-.071-.24.129-.535.398-.586c.228-.043.385.06.595.387a2.96 2.96 0 0 1 0 3.155c-.215.332-.454.45-.704.346m13.09 1.473c.203-.073.379-.141.39-.153c.012-.011-.027-.141-.087-.289c-.122-.302-.102-.295-.534-.212c-.468.09-.739.01-1.25-.366c-.14-.103-.283-.187-.32-.187c-.036 0-.115.053-.177.119c-.13.14-.15.36-.044.49c.093.113 1.377.724 1.53.727c.067.002.289-.056.492-.129m-.202-.983c.19-.038.211-.051.178-.112c-.036-.068-1.812-1.542-1.966-1.632c-.127-.074-.23-.057-.335.056c-.309.33-.273.4.526 1.013c.964.738 1.066.782 1.597.675m-2.384-2.231c0-.01-.201-.183-.448-.385c-.608-.501-.738-.688-.738-1.058c0-.31.206-.608.538-.78a.97.97 0 0 1 .625-.057c.118.038.648.325 1.383.748l.155.089l.128-.606c.13-.62.133-.782.012-.82a85 85 0 0 0-1.575-.286c-1.473-.26-1.634-.275-1.702-.164c-.037.06-.597 2.656-.597 2.767c0 .055.028.124.062.152c.034.029.512.132 1.062.23c1.062.191 1.095.196 1.095.17"/></svg>Contact List</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Name</td>
              <td>Email</td>
              <td>Phone</td>
            </tr>           
              {contacts.map((contact) => {
                return (
                
                <ContactRow key={contact.id} contact={contact} setSelectedContactId={setSelectedContactId}/>

                )               
              })}             
          </tbody>
        </table>
    );
    
}